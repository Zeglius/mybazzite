# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Build Image
on:
  push:
    branches: [main]
    paths-ignore: [".github/workflows/**"]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}-${{ inputs.brand_name}}-${{ inputs.stream_name }}
  cancel-in-progress: true

jobs:
  build-and-publish:
    name: Build and publish
    permissions:
      packages: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Maximize build space
        uses: AdityaGarg8/remove-unwanted-software@8831c82abf29b34eb2caac48d5f999ecfc0d8eef # v4.1
        with:
          remove-dotnet: true
          remove-android: true
          remove-haskell: true
          remove-codeql: true
          remove-docker-images: true
          remove-large-packages: true
          remove-cached-tools: true
          remove-swapfile: true

      - name: Mount BTRFS for docker storage
        env:
          BTRFS_TARGET_DIR: "/var/lib/docker"
        run: ${{ github.workspace }}/.github/workflows/mount_btrfs.sh

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Call Dagger Function
        uses: dagger/dagger-for-github@8.0.0
        with:
          version: "latest"
          module: github.com/Zeglius/bootc-dagger/ci@main
          verb: call
          args: >-
            new-builder
            ${{ github.event_name == 'pull_request' && ' --dry-run' || '' }}
            --cfg-file=./bootc-ci.yaml
            --build-context=.
            --secrets=env://GITHUB_SHA,env://GITHUB_REPOSITORY,env://CI,env://GITHUB_REPOSITORY_OWNER,env://GITHUB_REF_NAME
            build
          # assumes the Dagger Cloud token is in
          # a repository secret named DAGGER_CLOUD_TOKEN
          # set via the GitHub UI/CLI
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
